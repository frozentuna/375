{"version":3,"sources":["pages/photos/photos.tsx","pages/videos/videos.tsx","Components/Tweet/NoticeTweet.tsx","pages/home/home.tsx","pages/about/about.tsx","Components/Footer/Footer.tsx","Components/Navbar/sp.tsx","Components/Navbar/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Photos","react_default","a","createElement","Col_default","xs","md","size","offset","Card_default","CardBody_default","width","src","React","Component","Videos","NoticeTweet","hashtags","TwitterShareButton","title","this","url","TwitterIcon","round","Home","Container_default","CardTitle_default","Badge_default","color","CardImg_default","top","responsive","CardText_default","NoticeTweet_NoticeTweet","About","Footer375","className","fa","NavbarSp","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar_default","expand","NavbarBrand_default","Nav_default","navbar","NavbarToggler_default","onClick","Collapse_default","Uncontrolled","nav","inNavbar","DropdownToggle_default","create","io","DropdownMenu_default","right","DropdownItem_default","Link","to","Navbar375","sp_NavbarSp","App","BrowserRouter","Navbar_Navbar375","Switch","Route","path","component","Footer_Footer375","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48429b36.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'reactstrap/lib/Card';\r\nimport CardBody from 'reactstrap/lib/CardBody';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nexport default class Photos extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <img width=\"100%\" src=\"./resources/minako01.jpg\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <img width=\"100%\" src=\"./resources/minako02.jpg\" />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Videos extends React.Component {\r\n    public render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { TwitterShareButton, TwitterIcon } from 'react-share'\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nexport default class NoticeTweet extends React.Component {\r\n\r\n    hashtags: string[] = [\"今年最後の肉の日一斉投票\", \"主人公美奈子\", \"アイドル投票TC\"]\r\n\r\n    public render() {\r\n        return (\r\n            <Col xs={{ size: 2, offset: 4 }} md={{ size: 2, offset: 5 }}>\r\n                <TwitterShareButton title=\"12/29に主人公役佐竹美奈子に投票をしよう！\" hashtags={this.hashtags} url=\"http://urx3.nu/OPxt\">\r\n                    <TwitterIcon size={48} round={true} />\r\n                </TwitterShareButton>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Card from 'reactstrap/lib/Card';\r\nimport CardBody from 'reactstrap/lib/CardBody';\r\nimport CardTitle from 'reactstrap/lib/CardTitle';\r\nimport CardText from 'reactstrap/lib/CardText';\r\nimport Badge from 'reactstrap/lib/Badge';\r\nimport CardImg from 'reactstrap/lib/CardImg';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport NoticeTweet from '../../Components/Tweet/NoticeTweet';\r\nimport Container from 'reactstrap/lib/Container';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <Container>\r\n                <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <CardTitle><Badge color=\"primary\">New</Badge> 12/29 一斉投票の告知 </CardTitle>\r\n                            <CardImg top responsive=\"true\" src=\"./resources/1229_top.png\" />\r\n                            <CardText>\r\n                                12/29(土) 11:29<br />\r\n                                #主人公佐竹美奈子<br />\r\n                                #今年最後の肉の日一斉投票<br />\r\n                                <br />\r\n                                告知Tweetをして盛り上げよう！\r\n                        </CardText>\r\n                            <NoticeTweet />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Card from 'reactstrap/lib/Card';\r\nimport CardBody from 'reactstrap/lib/CardBody';\r\nimport CardTitle from 'reactstrap/lib/CardTitle';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nexport default class About extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>who is 佐竹美奈子</CardTitle>\r\n                        <img width=\"100%\" src=\"./resources/who.jpg\" />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Alert from 'reactstrap/lib/Alert';\r\nimport { FaTwitter, FaMastodon } from 'react-icons/fa';\r\nimport Container from 'reactstrap/lib/Container';\r\nimport \"./Footer.css\"\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nexport default class Footer375 extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <Container>\r\n                <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <div className=\"navbar\" >\r\n                        <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                            <footer>\r\n                                <p>\r\n                                    created by まぐろうP<br />\r\n                                    <FaTwitter /> @frozentuna<br />\r\n                                    <FaMastodon /> frozentuna@imastodon.net<br />\r\n                                </p>\r\n                            </footer>\r\n                        </Col>\r\n                    </div >\r\n                </Col>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Navbar from 'reactstrap/lib/Navbar';\r\nimport NavbarBrand from 'reactstrap/lib/NavbarBrand';\r\nimport NavLink from 'reactstrap/lib/NavLink';\r\nimport { Link } from 'react-router-dom';\r\nimport NavItem from 'reactstrap/lib/NavItem';\r\nimport Nav from 'reactstrap/lib/Nav';\r\nimport Tweet from '../Tweet/Tweet';\r\nimport { UncontrolledDropdown } from 'reactstrap/lib/Uncontrolled';\r\nimport Collapse from 'reactstrap/lib/Collapse';\r\nimport NavbarToggler from 'reactstrap/lib/NavbarToggler';\r\nimport DropdownToggle from 'reactstrap/lib/DropdownToggle';\r\nimport DropdownMenu from 'reactstrap/lib/DropdownMenu';\r\nimport DropdownItem from 'reactstrap/lib/DropdownItem';\r\nimport Container from 'reactstrap/lib/Container';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport { IoMdMenu } from \"react-icons/io\";\r\n\r\nexport default class NavbarSp extends React.Component<{}, { isOpen: boolean }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <Container>\r\n                <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <Navbar expand=\"xs\">\r\n                        <NavbarBrand>\r\n                            佐竹飯店後援会\r\n                    </NavbarBrand>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <UncontrolledDropdown nav inNavbar>\r\n                                    <DropdownToggle nav create=\"true\" >\r\n                                        <IoMdMenu size=\"2em\" color=\"black\"></IoMdMenu>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu right>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/\">Home</Link>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/about\">About</Link>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem>\r\n                                            <Link to=\"/photos\">Photo</Link>\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                            </Collapse>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </Col>\r\n\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport NavbarPc from './pc';\r\nimport NavbarSp from './sp';\r\nimport \"./Navbar.css\";\r\n\r\nexport default class Navbar375 extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"barcolor\">\r\n                <NavbarSp />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Photos from './pages/photos/photos';\r\nimport Videos from './pages/videos/videos';\r\nimport Home from './pages/home/home';\r\nimport About from './pages/about/about';\r\n\r\nimport Footer375 from './Components/Footer/Footer';\r\nimport Navbar375 from './Components/Navbar/Navbar';\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar375 />\r\n          <Switch>\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/videos\" component={Videos} />\r\n            <Route path=\"/photos\" component={Photos} />\r\n            <Route path=\"/\" component={Home} />\r\n            <Route component={Home} />\r\n          </Switch>\r\n          <Footer375 />\r\n        </div>\r\n      </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}